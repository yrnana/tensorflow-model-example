{"version":3,"file":"index.9dce83ec.js","sources":["../../vite/modulepreload-polyfill","../../vite/preload-helper","../../react/jsx-runtime","../../src/components/Layout.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","const scriptRel = 'modulepreload';const seen = {};const base = '/tensorflow-model-example/';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', rej);\n            });\n        }\n    })).then(() => baseModule());\n}","import * as jsxRuntime from \"/Users/nana.na/Documents/workspace/react/tensorflow-model-example/node_modules/react/jsx-runtime.js\"\nexport const jsx = jsxRuntime.jsx\nexport const jsxs = jsxRuntime.jsxs\nexport const Fragment = jsxRuntime.Fragment","import { NavLink, NavLinkProps, Outlet } from 'react-router-dom';\n\nconst Layout = () => {\n  return (\n    <div className=\"container mx-auto px-4\">\n      <div className=\"flex flex-col min-h-screen\">\n        <header className=\"py-4 flex-shrink-0 overflow-x-auto\">\n          <nav className=\"flex items-center space-x-4\">\n            <ActiveLink to=\"/\">Home</ActiveLink>\n            <ActiveLink to=\"/object-detection\">객체 감지</ActiveLink>\n            <ActiveLink to=\"/body-pix\">신체 분절화</ActiveLink>\n            <ActiveLink to=\"/pose-detection\">자세 인식</ActiveLink>\n            <ActiveLink to=\"/toxicity\">악성 텍스트 감지</ActiveLink>\n            <ActiveLink to=\"/speech-commands\">음성 인식</ActiveLink>\n            <ActiveLink to=\"/face-detection\">얼굴 인식</ActiveLink>\n            <ActiveLink to=\"/semantic-segmentation\">시맨틱 세분화</ActiveLink>\n            <ActiveLink to=\"/face-landmarks-detection\">\n              얼굴 랜드마크 감지\n            </ActiveLink>\n            <ActiveLink to=\"/hand-pose\">손 모양 인식</ActiveLink>\n            <ActiveLink to=\"/qna\">자연어 질문 답변</ActiveLink>\n          </nav>\n        </header>\n        <div className=\"flex-grow\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n\nconst ActiveLink = (props: NavLinkProps) => {\n  return (\n    <NavLink\n      {...props}\n      className={({ isActive }) =>\n        isActive\n          ? 'text-purple-500 flex-shrink-0'\n          : 'text-gray-500 flex-shrink-0'\n      }\n    />\n  );\n};\n","import { lazy, Suspense } from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Layout from '~/components/Layout';\n\nconst BodyPix = lazy(() => import('~/pages/BodyPix'));\nconst FaceDetection = lazy(() => import('~/pages/FaceDetection'));\nconst FaceLandmarksDetection = lazy(\n  () => import('~/pages/FaceLandmarksDetection'),\n);\nconst HandPose = lazy(() => import('~/pages/HandPose'));\nconst Home = lazy(() => import('~/pages/Home'));\nconst ObjectDetection = lazy(() => import('~/pages/ObjectDetection'));\nconst PoseDetection = lazy(() => import('~/pages/PoseDetection'));\nconst QnA = lazy(() => import('~/pages/QnA'));\nconst SemanticSegmentation = lazy(() => import('~/pages/SemanticSegmentation'));\nconst SpeechCommandRecognizer = lazy(\n  () => import('~/pages/SpeechCommandRecognizer'),\n);\nconst Toxicity = lazy(() => import('~/pages/Toxicity'));\n\nfunction App() {\n  return (\n    <Suspense fallback={null}>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Layout />}>\n            <Route index element={<Home />} />\n            <Route path=\"object-detection\" element={<ObjectDetection />} />\n            <Route path=\"body-pix\" element={<BodyPix />} />\n            <Route path=\"pose-detection\" element={<PoseDetection />} />\n            <Route path=\"toxicity\" element={<Toxicity />} />\n            <Route\n              path=\"speech-commands\"\n              element={<SpeechCommandRecognizer />}\n            />\n            <Route path=\"face-detection\" element={<FaceDetection />} />\n            <Route\n              path=\"semantic-segmentation\"\n              element={<SemanticSegmentation />}\n            />\n            <Route\n              path=\"face-landmarks-detection\"\n              element={<FaceLandmarksDetection />}\n            />\n            <Route path=\"hand-pose\" element={<HandPose />} />\n            <Route path=\"qna\" element={<QnA />} />\n          </Route>\n        </Routes>\n      </BrowserRouter>\n    </Suspense>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@tensorflow/tfjs-backend-cpu';\nimport '@tensorflow/tfjs-backend-webgl';\nimport * as tf from '@tensorflow/tfjs-core';\nimport App from './App';\nimport './index.css';\n\ntf.setBackend('webgl').then(() => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n  );\n});\n"],"names":["jsxRuntime.jsx","jsxRuntime.jsxs","jsxRuntime.Fragment","Layout","ActiveLink","props","isActive","BodyPix","lazy","FaceDetection","FaceLandmarksDetection","HandPose","Home","ObjectDetection","PoseDetection","QnA","SemanticSegmentation","SpeechCommandRecognizer","Toxicity","Suspense","tf","then","render","document","getElementById"],"mappings":"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"}